#!/bin/sh
#
# This script is run by the pppd after the link is established.
# It should be used to add routes, set IP address, run the mailq etc.
#
# This script is called with the following arguments:
# Arg  Name               Example
# $1   Interface name     ppp0
# $2   The tty            ttyS1
# $3   The link speed     38400
# $4   Local IP number    12.34.56.78
# $5   Peer  IP number    12.34.56.99
#

#
# The environment is cleared before executing this script
# so the path must be reset
#
PATH=/usr/sbin:/sbin:/usr/bin:/bin
export PATH

LOGIN_TIME="$(date "+%Y-%m-%d_%H:%M:%S")"
USERNAME="${PEERNAME}"
PEERIP="${5}"

USER_CONFIG="pppoe-user"
USER_CFGID="$(uci show ${USER_CONFIG} | grep "${USERNAME}" | cut -d '.' -sf 2)"
USER_QOS="$(uci get ${USER_CONFIG}."${USER_CFGID}".qos)"
USER_UPLOAD="$(uci get ${USER_CONFIG}."${USER_CFGID}".urate)"
USER_DOWNLOAD="$(uci get ${USER_CONFIG}."${USER_CFGID}".drate)"
USER_UNIT="$(uci get ${USER_CONFIG}."${USER_CFGID}".unit)"
UP="upload"
DOWN="download"

if [ "${USER_QOS}" = "1" ]; then
nft insert rule inet pppoe-user-qos ${UP} ip saddr "${PEERIP}" limit rate over "${USER_UPLOAD}" "${USER_UNIT}"/second drop
nft insert rule inet pppoe-user-qos ${DOWN} ip daddr "${PEERIP}" limit rate over "${USER_DOWNLOAD}" "${USER_UNIT}"/second drop
fi

logger "${LOGIN_TIME} ${PEERNAME} ${PEERIP} SPEED-LIMIT >>>>>> The script has been executed!"

exit 0
